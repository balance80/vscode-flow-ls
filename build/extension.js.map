{"version":3,"sources":["../lib/extension.js"],"names":["activate","path","context","serverModule","asAbsolutePath","join","debugOptions","execArgv","serverOptions","run","module","transport","ipc","debug","options","clientOptions","documentSelector","scheme","language","synchronize","configurationSection","fileEvents","createFileSystemWatcher","statusBarItem","createStatusBarItem","Left","serverRunning","client","running","stopped","onDidChangeState","event","newState","Running","info","tooltip","udpateStatusBarVisibility","onTelemetry","console","log","disposable","start","subscriptions","push","show","text","hide"],"mappings":"AACA;;;;;QAkBgBA,Q,GAAAA,Q;;AAhBhB;;IAAYC,I;;AAEZ;;AAMA;;;;AAQO,SAASD,QAAT,CAAkBE,OAAlB,EAA6C;AAClD,QAAMC,eAAeD,QAAQE,cAAR,CACnBH,KAAKI,IAAL,CAAU,cAAV,EAA0B,sBAA1B,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,QAAhE,CADmB,CAArB;AAGA,QAAMC,eAAe,EAAEC,UAAU,CAAC,UAAD,EAAa,cAAb,CAAZ,EAArB;AACA,QAAMC,gBAA+B;AACnCC,SAAK,EAAEC,QAAQP,YAAV,EAAwBQ,WAAW,oCAAcC,GAAjD,EAD8B;AAEnCC,WAAO;AACLH,cAAQP,YADH;AAELQ,iBAAW,oCAAcC,GAFpB;AAGLE,eAAS,EAAEP,UAAU,CAAC,UAAD,EAAa,gBAAb,CAAZ;AAHJ;AAF4B,GAArC;;AASA,QAAMQ,gBAAuC;AAC3CC,sBAAkB,CAChB,EAAEC,QAAQ,MAAV,EAAkBC,UAAU,YAA5B,EADgB,EAEhB,EAAED,QAAQ,MAAV,EAAkBC,UAAU,iBAA5B,EAFgB,CADyB;AAK3CC,iBAAa;AACXC,4BAAsB,MADX;AAEXC,kBAAY,kBAAUC,uBAAV,CAAkC,uBAAlC;AAFD;AAL8B,GAA7C;;AAWA,QAAMC,gBAAgB,eAAOC,mBAAP,CAA2B,2BAAmBC,IAA9C,EAAoD,CAApD,CAAtB;AACA,MAAIC,gBAAyB,KAA7B;;AAEA,QAAMC,SAAS,yCACb,MADa,EAEb,MAFa,EAGbnB,aAHa,EAIbO,aAJa,CAAf;AAMA,QAAMa,UAAU,yBAAhB;AACA,QAAMC,UAAU,sBAAhB;;AAEAF,SAAOG,gBAAP,CAAwBC,SAAS;AAC/B,QAAIA,MAAMC,QAAN,KAAmB,4BAAMC,OAA7B,EAAsC;AACpCN,aAAOO,IAAP,CAAYN,OAAZ;AACAL,oBAAcY,OAAd,GAAwBP,OAAxB;AACAF,sBAAgB,IAAhB;AACD,KAJD,MAIO;AACLC,aAAOO,IAAP,CAAYL,OAAZ;AACAN,oBAAcY,OAAd,GAAwBN,OAAxB;AACAH,sBAAgB,KAAhB;AACD;AACDU,8BAA0Bb,aAA1B,EAAyCG,aAAzC;AACD,GAXD;;AAaAC,SAAOU,WAAP,CAAmBN,SAASO,QAAQC,GAAR,CAAYR,KAAZ,CAA5B;;AAEA,QAAMS,aAAab,OAAOc,KAAP,EAAnB;;AAEAvC,UAAQwC,aAAR,CAAsBC,IAAtB,CAA2BH,UAA3B;AACD;;AAED,SAASJ,yBAAT,CAAmCb,aAAnC,EAAkDqB,IAAlD,EAAuE;AACrE,MAAIA,IAAJ,EAAU;AACRrB,kBAAcqB,IAAd;AACArB,kBAAcsB,IAAd,GAAqB,MAArB;AACD,GAHD,MAGO;AACLtB,kBAAcuB,IAAd;AACD;AACF","file":"extension.js","sourcesContent":["// @flow\n'use strict';\n\nimport * as path from 'path';\n\nimport {\n  workspace,\n  window,\n  ExtensionContext,\n  StatusBarAlignment\n} from 'vscode';\nimport {\n  LanguageClient,\n  LanguageClientOptions,\n  ServerOptions,\n  TransportKind,\n  State\n} from 'vscode-languageclient';\n\nexport function activate(context: ExtensionContext) {\n  const serverModule = context.asAbsolutePath(\n    path.join('node_modules', 'flow-language-server', 'lib', 'bin', 'cli.js')\n  );\n  const debugOptions = { execArgv: ['--nolazy', '--debug=6009'] };\n  const serverOptions: ServerOptions = {\n    run: { module: serverModule, transport: TransportKind.ipc },\n    debug: {\n      module: serverModule,\n      transport: TransportKind.ipc,\n      options: { execArgv: ['--nolazy', '--try-flow-bin'] }\n    }\n  };\n\n  const clientOptions: LanguageClientOptions = {\n    documentSelector: [\n      { scheme: 'file', language: 'javascript' },\n      { scheme: 'file', language: 'javascriptreact' }\n    ],\n    synchronize: {\n      configurationSection: 'flow',\n      fileEvents: workspace.createFileSystemWatcher('**/*.{js,jsx,js.flow}')\n    }\n  };\n\n  const statusBarItem = window.createStatusBarItem(StatusBarAlignment.Left, 0);\n  let serverRunning: boolean = false;\n\n  const client = new LanguageClient(\n    'flow',\n    'Flow',\n    serverOptions,\n    clientOptions\n  );\n  const running = 'Flow server is running.';\n  const stopped = 'Flow server stopped.';\n\n  client.onDidChangeState(event => {\n    if (event.newState === State.Running) {\n      client.info(running);\n      statusBarItem.tooltip = running;\n      serverRunning = true;\n    } else {\n      client.info(stopped);\n      statusBarItem.tooltip = stopped;\n      serverRunning = false;\n    }\n    udpateStatusBarVisibility(statusBarItem, serverRunning);\n  });\n\n  client.onTelemetry(event => console.log(event));\n\n  const disposable = client.start();\n\n  context.subscriptions.push(disposable);\n}\n\nfunction udpateStatusBarVisibility(statusBarItem, show: boolean): void {\n  if (show) {\n    statusBarItem.show();\n    statusBarItem.text = 'Flow';\n  } else {\n    statusBarItem.hide();\n  }\n}\n"]}